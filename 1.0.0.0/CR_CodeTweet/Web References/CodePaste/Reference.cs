//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3603
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.3603.
// 
#pragma warning disable 1591

namespace CR_CodeTweet.CodePaste {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="CodePasteSoapService", Namespace="http://codepaste.net/soap")]
    public partial class CodePasteSoapService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetSnippetOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNewSnippetOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRecentSnippetsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSnippetsForUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchSnippetsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCommentsForSnippetOperationCompleted;
        
        private System.Threading.SendOrPostCallback PostNewCodeSnippetOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteSnippetOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSessionKeyOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public CodePasteSoapService() {
            this.Url = "http://codepaste.net/services/codepastesoapservice.asmx";
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetSnippetCompletedEventHandler GetSnippetCompleted;
        
        /// <remarks/>
        public event GetNewSnippetCompletedEventHandler GetNewSnippetCompleted;
        
        /// <remarks/>
        public event GetRecentSnippetsCompletedEventHandler GetRecentSnippetsCompleted;
        
        /// <remarks/>
        public event GetSnippetsForUserCompletedEventHandler GetSnippetsForUserCompleted;
        
        /// <remarks/>
        public event SearchSnippetsCompletedEventHandler SearchSnippetsCompleted;
        
        /// <remarks/>
        public event GetCommentsForSnippetCompletedEventHandler GetCommentsForSnippetCompleted;
        
        /// <remarks/>
        public event PostNewCodeSnippetCompletedEventHandler PostNewCodeSnippetCompleted;
        
        /// <remarks/>
        public event DeleteSnippetCompletedEventHandler DeleteSnippetCompleted;
        
        /// <remarks/>
        public event GetSessionKeyCompletedEventHandler GetSessionKeyCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://codepaste.net/soap/GetSnippet", RequestNamespace="http://codepaste.net/soap", ResponseNamespace="http://codepaste.net/soap", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CodeSnippet GetSnippet(string id) {
            object[] results = this.Invoke("GetSnippet", new object[] {
                        id});
            return ((CodeSnippet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSnippetAsync(string id) {
            this.GetSnippetAsync(id, null);
        }
        
        /// <remarks/>
        public void GetSnippetAsync(string id, object userState) {
            if ((this.GetSnippetOperationCompleted == null)) {
                this.GetSnippetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSnippetOperationCompleted);
            }
            this.InvokeAsync("GetSnippet", new object[] {
                        id}, this.GetSnippetOperationCompleted, userState);
        }
        
        private void OnGetSnippetOperationCompleted(object arg) {
            if ((this.GetSnippetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSnippetCompleted(this, new GetSnippetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://codepaste.net/soap/GetNewSnippet", RequestNamespace="http://codepaste.net/soap", ResponseNamespace="http://codepaste.net/soap", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CodeSnippet GetNewSnippet() {
            object[] results = this.Invoke("GetNewSnippet", new object[0]);
            return ((CodeSnippet)(results[0]));
        }
        
        /// <remarks/>
        public void GetNewSnippetAsync() {
            this.GetNewSnippetAsync(null);
        }
        
        /// <remarks/>
        public void GetNewSnippetAsync(object userState) {
            if ((this.GetNewSnippetOperationCompleted == null)) {
                this.GetNewSnippetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNewSnippetOperationCompleted);
            }
            this.InvokeAsync("GetNewSnippet", new object[0], this.GetNewSnippetOperationCompleted, userState);
        }
        
        private void OnGetNewSnippetOperationCompleted(object arg) {
            if ((this.GetNewSnippetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNewSnippetCompleted(this, new GetNewSnippetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://codepaste.net/soap/GetRecentSnippets", RequestNamespace="http://codepaste.net/soap", ResponseNamespace="http://codepaste.net/soap", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Snippet[] GetRecentSnippets() {
            object[] results = this.Invoke("GetRecentSnippets", new object[0]);
            return ((Snippet[])(results[0]));
        }
        
        /// <remarks/>
        public void GetRecentSnippetsAsync() {
            this.GetRecentSnippetsAsync(null);
        }
        
        /// <remarks/>
        public void GetRecentSnippetsAsync(object userState) {
            if ((this.GetRecentSnippetsOperationCompleted == null)) {
                this.GetRecentSnippetsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRecentSnippetsOperationCompleted);
            }
            this.InvokeAsync("GetRecentSnippets", new object[0], this.GetRecentSnippetsOperationCompleted, userState);
        }
        
        private void OnGetRecentSnippetsOperationCompleted(object arg) {
            if ((this.GetRecentSnippetsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRecentSnippetsCompleted(this, new GetRecentSnippetsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://codepaste.net/soap/GetSnippetsForUser", RequestNamespace="http://codepaste.net/soap", ResponseNamespace="http://codepaste.net/soap", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Snippet[] GetSnippetsForUser(string userId, int count) {
            object[] results = this.Invoke("GetSnippetsForUser", new object[] {
                        userId,
                        count});
            return ((Snippet[])(results[0]));
        }
        
        /// <remarks/>
        public void GetSnippetsForUserAsync(string userId, int count) {
            this.GetSnippetsForUserAsync(userId, count, null);
        }
        
        /// <remarks/>
        public void GetSnippetsForUserAsync(string userId, int count, object userState) {
            if ((this.GetSnippetsForUserOperationCompleted == null)) {
                this.GetSnippetsForUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSnippetsForUserOperationCompleted);
            }
            this.InvokeAsync("GetSnippetsForUser", new object[] {
                        userId,
                        count}, this.GetSnippetsForUserOperationCompleted, userState);
        }
        
        private void OnGetSnippetsForUserOperationCompleted(object arg) {
            if ((this.GetSnippetsForUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSnippetsForUserCompleted(this, new GetSnippetsForUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://codepaste.net/soap/SearchSnippets", RequestNamespace="http://codepaste.net/soap", ResponseNamespace="http://codepaste.net/soap", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Snippet[] SearchSnippets(CodeSnippetSearchParameters searchParameters) {
            object[] results = this.Invoke("SearchSnippets", new object[] {
                        searchParameters});
            return ((Snippet[])(results[0]));
        }
        
        /// <remarks/>
        public void SearchSnippetsAsync(CodeSnippetSearchParameters searchParameters) {
            this.SearchSnippetsAsync(searchParameters, null);
        }
        
        /// <remarks/>
        public void SearchSnippetsAsync(CodeSnippetSearchParameters searchParameters, object userState) {
            if ((this.SearchSnippetsOperationCompleted == null)) {
                this.SearchSnippetsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchSnippetsOperationCompleted);
            }
            this.InvokeAsync("SearchSnippets", new object[] {
                        searchParameters}, this.SearchSnippetsOperationCompleted, userState);
        }
        
        private void OnSearchSnippetsOperationCompleted(object arg) {
            if ((this.SearchSnippetsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchSnippetsCompleted(this, new SearchSnippetsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://codepaste.net/soap/GetCommentsForSnippet", RequestNamespace="http://codepaste.net/soap", ResponseNamespace="http://codepaste.net/soap", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Comment[] GetCommentsForSnippet(string snippetId) {
            object[] results = this.Invoke("GetCommentsForSnippet", new object[] {
                        snippetId});
            return ((Comment[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCommentsForSnippetAsync(string snippetId) {
            this.GetCommentsForSnippetAsync(snippetId, null);
        }
        
        /// <remarks/>
        public void GetCommentsForSnippetAsync(string snippetId, object userState) {
            if ((this.GetCommentsForSnippetOperationCompleted == null)) {
                this.GetCommentsForSnippetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCommentsForSnippetOperationCompleted);
            }
            this.InvokeAsync("GetCommentsForSnippet", new object[] {
                        snippetId}, this.GetCommentsForSnippetOperationCompleted, userState);
        }
        
        private void OnGetCommentsForSnippetOperationCompleted(object arg) {
            if ((this.GetCommentsForSnippetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCommentsForSnippetCompleted(this, new GetCommentsForSnippetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://codepaste.net/soap/PostNewCodeSnippet", RequestNamespace="http://codepaste.net/soap", ResponseNamespace="http://codepaste.net/soap", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CodeSnippet PostNewCodeSnippet(CodeSnippet snippet, string sessionKey) {
            object[] results = this.Invoke("PostNewCodeSnippet", new object[] {
                        snippet,
                        sessionKey});
            return ((CodeSnippet)(results[0]));
        }
        
        /// <remarks/>
        public void PostNewCodeSnippetAsync(CodeSnippet snippet, string sessionKey) {
            this.PostNewCodeSnippetAsync(snippet, sessionKey, null);
        }
        
        /// <remarks/>
        public void PostNewCodeSnippetAsync(CodeSnippet snippet, string sessionKey, object userState) {
            if ((this.PostNewCodeSnippetOperationCompleted == null)) {
                this.PostNewCodeSnippetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPostNewCodeSnippetOperationCompleted);
            }
            this.InvokeAsync("PostNewCodeSnippet", new object[] {
                        snippet,
                        sessionKey}, this.PostNewCodeSnippetOperationCompleted, userState);
        }
        
        private void OnPostNewCodeSnippetOperationCompleted(object arg) {
            if ((this.PostNewCodeSnippetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PostNewCodeSnippetCompleted(this, new PostNewCodeSnippetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://codepaste.net/soap/DeleteSnippet", RequestNamespace="http://codepaste.net/soap", ResponseNamespace="http://codepaste.net/soap", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteSnippet(string snippetId, string sessionKey) {
            object[] results = this.Invoke("DeleteSnippet", new object[] {
                        snippetId,
                        sessionKey});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteSnippetAsync(string snippetId, string sessionKey) {
            this.DeleteSnippetAsync(snippetId, sessionKey, null);
        }
        
        /// <remarks/>
        public void DeleteSnippetAsync(string snippetId, string sessionKey, object userState) {
            if ((this.DeleteSnippetOperationCompleted == null)) {
                this.DeleteSnippetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteSnippetOperationCompleted);
            }
            this.InvokeAsync("DeleteSnippet", new object[] {
                        snippetId,
                        sessionKey}, this.DeleteSnippetOperationCompleted, userState);
        }
        
        private void OnDeleteSnippetOperationCompleted(object arg) {
            if ((this.DeleteSnippetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteSnippetCompleted(this, new DeleteSnippetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://codepaste.net/soap/GetSessionKey", RequestNamespace="http://codepaste.net/soap", ResponseNamespace="http://codepaste.net/soap", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetSessionKey(string email, string password) {
            object[] results = this.Invoke("GetSessionKey", new object[] {
                        email,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetSessionKeyAsync(string email, string password) {
            this.GetSessionKeyAsync(email, password, null);
        }
        
        /// <remarks/>
        public void GetSessionKeyAsync(string email, string password, object userState) {
            if ((this.GetSessionKeyOperationCompleted == null)) {
                this.GetSessionKeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSessionKeyOperationCompleted);
            }
            this.InvokeAsync("GetSessionKey", new object[] {
                        email,
                        password}, this.GetSessionKeyOperationCompleted, userState);
        }
        
        private void OnGetSessionKeyOperationCompleted(object arg) {
            if ((this.GetSessionKeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSessionKeyCompleted(this, new GetSessionKeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="CodePasteSoapServiceSoap", Namespace="http://codepaste.net/soap")]
    public partial class CodePasteSoapServiceSoap : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback ListSnippetsOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public CodePasteSoapServiceSoap() {
            this.Url = "http://codepaste.net/services/codepastesoapservice.asmx";
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event ListSnippetsCompletedEventHandler ListSnippetsCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://codepaste.net/soap/ListSnippets", RequestNamespace="http://codepaste.net/soap", ResponseNamespace="http://codepaste.net/soap", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Snippet[] ListSnippets(string filter, string filterParameter) {
            object[] results = this.Invoke("ListSnippets", new object[] {
                        filter,
                        filterParameter});
            return ((Snippet[])(results[0]));
        }
        
        /// <remarks/>
        public void ListSnippetsAsync(string filter, string filterParameter) {
            this.ListSnippetsAsync(filter, filterParameter, null);
        }
        
        /// <remarks/>
        public void ListSnippetsAsync(string filter, string filterParameter, object userState) {
            if ((this.ListSnippetsOperationCompleted == null)) {
                this.ListSnippetsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListSnippetsOperationCompleted);
            }
            this.InvokeAsync("ListSnippets", new object[] {
                        filter,
                        filterParameter}, this.ListSnippetsOperationCompleted, userState);
        }
        
        private void OnListSnippetsOperationCompleted(object arg) {
            if ((this.ListSnippetsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListSnippetsCompleted(this, new ListSnippetsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Snippet))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://codepaste.net/soap")]
    public partial class CodeSnippet {
        
        private string idField;
        
        private string userIdField;
        
        private string codeField;
        
        private string titleField;
        
        private string commentField;
        
        private string tagsField;
        
        private bool isPrivateField;
        
        private bool showLineNumbersField;
        
        private string authorField;
        
        private string themeField;
        
        private string languageField;
        
        private bool isAbuseField;
        
        private System.DateTime enteredField;
        
        private int viewsField;
        
        private bool isTemporaryField;
        
        private User userField;
        
        private Comment[] commentsField;
        
        /// <remarks/>
        public string Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
        
        /// <remarks/>
        public string Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public string Comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        public string Tags {
            get {
                return this.tagsField;
            }
            set {
                this.tagsField = value;
            }
        }
        
        /// <remarks/>
        public bool IsPrivate {
            get {
                return this.isPrivateField;
            }
            set {
                this.isPrivateField = value;
            }
        }
        
        /// <remarks/>
        public bool ShowLineNumbers {
            get {
                return this.showLineNumbersField;
            }
            set {
                this.showLineNumbersField = value;
            }
        }
        
        /// <remarks/>
        public string Author {
            get {
                return this.authorField;
            }
            set {
                this.authorField = value;
            }
        }
        
        /// <remarks/>
        public string Theme {
            get {
                return this.themeField;
            }
            set {
                this.themeField = value;
            }
        }
        
        /// <remarks/>
        public string Language {
            get {
                return this.languageField;
            }
            set {
                this.languageField = value;
            }
        }
        
        /// <remarks/>
        public bool IsAbuse {
            get {
                return this.isAbuseField;
            }
            set {
                this.isAbuseField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Entered {
            get {
                return this.enteredField;
            }
            set {
                this.enteredField = value;
            }
        }
        
        /// <remarks/>
        public int Views {
            get {
                return this.viewsField;
            }
            set {
                this.viewsField = value;
            }
        }
        
        /// <remarks/>
        public bool IsTemporary {
            get {
                return this.isTemporaryField;
            }
            set {
                this.isTemporaryField = value;
            }
        }
        
        /// <remarks/>
        public User User {
            get {
                return this.userField;
            }
            set {
                this.userField = value;
            }
        }
        
        /// <remarks/>
        public Comment[] Comments {
            get {
                return this.commentsField;
            }
            set {
                this.commentsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://codepaste.net/soap")]
    public partial class User {
        
        private string idField;
        
        private string nameField;
        
        private string emailField;
        
        private string passwordField;
        
        private string lastLanguageField;
        
        private bool isAdminField;
        
        private int visitsField;
        
        private int snippetsField;
        
        private System.DateTime updatedField;
        
        private System.DateTime enteredField;
        
        private string openIdField;
        
        private string openIdClaimField;
        
        /// <remarks/>
        public string Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        public string LastLanguage {
            get {
                return this.lastLanguageField;
            }
            set {
                this.lastLanguageField = value;
            }
        }
        
        /// <remarks/>
        public bool IsAdmin {
            get {
                return this.isAdminField;
            }
            set {
                this.isAdminField = value;
            }
        }
        
        /// <remarks/>
        public int Visits {
            get {
                return this.visitsField;
            }
            set {
                this.visitsField = value;
            }
        }
        
        /// <remarks/>
        public int Snippets {
            get {
                return this.snippetsField;
            }
            set {
                this.snippetsField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Updated {
            get {
                return this.updatedField;
            }
            set {
                this.updatedField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Entered {
            get {
                return this.enteredField;
            }
            set {
                this.enteredField = value;
            }
        }
        
        /// <remarks/>
        public string OpenId {
            get {
                return this.openIdField;
            }
            set {
                this.openIdField = value;
            }
        }
        
        /// <remarks/>
        public string OpenIdClaim {
            get {
                return this.openIdClaimField;
            }
            set {
                this.openIdClaimField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://codepaste.net/soap")]
    public partial class CodeSnippetSearchParameters {
        
        private string searchStringField;
        
        private System.DateTime fromDateField;
        
        private System.DateTime toDateField;
        
        private string tagsField;
        
        private string languageField;
        
        private string authorField;
        
        private string userIdField;
        
        private SearchOrderTypes searchOrderField;
        
        private int displayCountField;
        
        private int pageField;
        
        private int totalResultCountField;
        
        /// <remarks/>
        public string SearchString {
            get {
                return this.searchStringField;
            }
            set {
                this.searchStringField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime FromDate {
            get {
                return this.fromDateField;
            }
            set {
                this.fromDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ToDate {
            get {
                return this.toDateField;
            }
            set {
                this.toDateField = value;
            }
        }
        
        /// <remarks/>
        public string Tags {
            get {
                return this.tagsField;
            }
            set {
                this.tagsField = value;
            }
        }
        
        /// <remarks/>
        public string Language {
            get {
                return this.languageField;
            }
            set {
                this.languageField = value;
            }
        }
        
        /// <remarks/>
        public string Author {
            get {
                return this.authorField;
            }
            set {
                this.authorField = value;
            }
        }
        
        /// <remarks/>
        public string UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
        
        /// <remarks/>
        public SearchOrderTypes SearchOrder {
            get {
                return this.searchOrderField;
            }
            set {
                this.searchOrderField = value;
            }
        }
        
        /// <remarks/>
        public int DisplayCount {
            get {
                return this.displayCountField;
            }
            set {
                this.displayCountField = value;
            }
        }
        
        /// <remarks/>
        public int Page {
            get {
                return this.pageField;
            }
            set {
                this.pageField = value;
            }
        }
        
        /// <remarks/>
        public int TotalResultCount {
            get {
                return this.totalResultCountField;
            }
            set {
                this.totalResultCountField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://codepaste.net/soap")]
    public enum SearchOrderTypes {
        
        /// <remarks/>
        Entered,
        
        /// <remarks/>
        Title,
        
        /// <remarks/>
        Author,
        
        /// <remarks/>
        Views,
        
        /// <remarks/>
        None,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://codepaste.net/soap")]
    public partial class Comment {
        
        private string idField;
        
        private string snippetIdField;
        
        private string commentTextField;
        
        private string authorField;
        
        private string userIdField;
        
        private System.DateTime enteredField;
        
        /// <remarks/>
        public string Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string SnippetId {
            get {
                return this.snippetIdField;
            }
            set {
                this.snippetIdField = value;
            }
        }
        
        /// <remarks/>
        public string CommentText {
            get {
                return this.commentTextField;
            }
            set {
                this.commentTextField = value;
            }
        }
        
        /// <remarks/>
        public string Author {
            get {
                return this.authorField;
            }
            set {
                this.authorField = value;
            }
        }
        
        /// <remarks/>
        public string UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Entered {
            get {
                return this.enteredField;
            }
            set {
                this.enteredField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://codepaste.net/soap")]
    public partial class Snippet : CodeSnippet {
        
        private int commentCountField;
        
        /// <remarks/>
        public int CommentCount {
            get {
                return this.commentCountField;
            }
            set {
                this.commentCountField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetSnippetCompletedEventHandler(object sender, GetSnippetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSnippetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSnippetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CodeSnippet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CodeSnippet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetNewSnippetCompletedEventHandler(object sender, GetNewSnippetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNewSnippetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNewSnippetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CodeSnippet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CodeSnippet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetRecentSnippetsCompletedEventHandler(object sender, GetRecentSnippetsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRecentSnippetsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRecentSnippetsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Snippet[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Snippet[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetSnippetsForUserCompletedEventHandler(object sender, GetSnippetsForUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSnippetsForUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSnippetsForUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Snippet[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Snippet[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void SearchSnippetsCompletedEventHandler(object sender, SearchSnippetsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchSnippetsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchSnippetsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Snippet[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Snippet[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetCommentsForSnippetCompletedEventHandler(object sender, GetCommentsForSnippetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCommentsForSnippetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCommentsForSnippetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Comment[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Comment[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void PostNewCodeSnippetCompletedEventHandler(object sender, PostNewCodeSnippetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PostNewCodeSnippetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PostNewCodeSnippetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CodeSnippet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CodeSnippet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void DeleteSnippetCompletedEventHandler(object sender, DeleteSnippetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteSnippetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteSnippetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetSessionKeyCompletedEventHandler(object sender, GetSessionKeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSessionKeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSessionKeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void ListSnippetsCompletedEventHandler(object sender, ListSnippetsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListSnippetsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListSnippetsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Snippet[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Snippet[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591